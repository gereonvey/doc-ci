---
name: Validate/build/pre-publish documentation

on:
  push

jobs:
  select-dc-files:
    runs-on: ubuntu-latest
    outputs:
      validate-list: ${{ steps.select-dc-validate.outputs.dc-list }}
      build-list: ${{ steps.select-dc-build.outputs.dc-list }}
      allow-build: ${{ steps.select-dc-build.outputs.allow-build }}
      relevant-branches: ${{ steps.select-dc-build.outputs.relevant-branches }}
    steps:
      - uses: actions/checkout@v2

      - name: Checking basic soundness of DC files
        uses: openSUSE/doc-ci@gha-select-dcs
        with:
          use-case: soundness

      - name: Selecting DC files to validate
        id: select-dc-validate
        uses: openSUSE/doc-ci@gha-select-dcs
        with:
          use-case: list-validate

      - name: Selecting DC files to build
        id: select-dc-build
        uses: openSUSE/doc-ci@gha-select-dcs
        with:
          use-case: list-build

  validate:
    runs-on: ubuntu-latest
    needs: select-dc-files
    strategy:
      # don't cancel all validation runners when one of them fails
      fail-fast: false
      matrix:
        dc-files: ${{ fromJson(needs.select-dc-files.outputs.validate-list) }}
    steps:
      - uses: actions/checkout@v2
      - name: Validating DC file(s) ${{ matrix.dc-files }}
        uses: openSUSE/doc-ci@gha-validate
        with:
          dc-files: ${{ matrix.dc-files }}


  build-html:
    runs-on: ubuntu-latest
    needs: [select-dc-files, validate]
    outputs:
      artifact-name: ${{ steps.build-dc.outputs.artifact-name }}
      artifact-dir: ${{ steps.build-dc.outputs.artifact-dir }}
    strategy:
      matrix:
        dc-files: ${{ fromJson(needs.select-dc-files.outputs.build-list) }}
    steps:
      - uses: actions/checkout@v2
      - name: Building DC file(s) ${{ matrix.dc-files }}
        id: build-dc
        uses: openSUSE/doc-ci@gha-build
        with:
          dc-files: ${{ matrix.dc-files }}
      - name: Uploading builds as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.build-dc.outputs.artifact-name }}
          path: ${{ steps.build-dc.outputs.artifact-dir }}/*
          retention-days: 3


  publish:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: [select-dc-files, build-html]
    steps:
      - name: Downloading all build artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifact-dir
      - name: Publishing builds on susedoc.github.io
        env:
          DEPLOY_KEY: ${{ secrets.SDGI_DOC_SLE_DEPLOY }}
        uses: openSUSE/doc-ci@gha-publish
        with:
          publish-repo: git@github.com:susedoc/doc-sle
          publish-branch: test
          artifact-path: artifact-downloads
          relevant-branches: ${{ needs.select-dc-files.outputs.relevant-branches }}
